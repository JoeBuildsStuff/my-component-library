{
    "$schema": "https://ui.shadcn.com/schema/registry.json",
    "name": "my-component-library",
    "homepage": "https://my-component-library-woad.vercel.app/",
    "items": [
      {
        "name": "mode-toggle",
        "type": "registry:component",
        "title": "Mode Toggle",
        "description": "A theme toggle component with dropdown menu for light, dark, and system modes.",
        "dependencies": [
          "next-themes",
          "lucide-react"
        ],
        "registryDependencies": [
          "button",
          "dropdown-menu"
        ],
        "files": [
          {
            "path": "registry/mode-toggle/components/mode-toggle.tsx",
            "type": "registry:component",
            "target": "components/mode-toggle.tsx"
          },
          {
            "path": "registry/mode-toggle/components/theme-provider.tsx",
            "type": "registry:component",
            "target": "components/theme-provider.tsx"
          },
          {
            "path": "registry/mode-toggle/app/layout.tsx",
            "type": "registry:file",
            "target": "app/layout.tsx"
          },
          {
            "path": "registry/mode-toggle/app/globals.css",
            "type": "registry:file",
            "target": "app/globals.css"
          },
          {
            "path": "registry/mode-toggle/app/page.tsx",
            "type": "registry:page",
            "target": "app/page.tsx"
          }
        ]
      },
      {
        "name": "button-open-in-v0",
        "type": "registry:component",
        "title": "Open in v0",
        "description": "A button to open a component in v0.",
        "dependencies": [
          "next/link"
        ],
        "registryDependencies": [
          "button"
        ],
        "files": [
          {
            "path": "registry/ui/buttons/button-open-in-v0.tsx",
            "type": "registry:component",
            "target": "components/button-open-in-v0.tsx"
          }
        ]
      },
      {
        "name": "badge",
        "type": "registry:ui",
        "title": "Badge",
        "description": "Displays a badge or a component that looks like a badge with multiple color variants.",
        "dependencies": [
          "@radix-ui/react-slot",
          "class-variance-authority"
        ],
        "files": [
          {
            "path": "registry/ui/badge.tsx",
            "type": "registry:component",
            "target": "components/ui/badge.tsx"
          }
        ]
      },
      {
        "name": "logo",
        "type": "registry:ui",
        "title": "Logo",
        "description": "Displays a logo with an icon and text with adaptive theming.",
        "dependencies": [
          "lucide-react"
        ],
        "files": [
          {
            "path": "registry/ui/logo.tsx",
            "type": "registry:component",
            "target": "components/ui/logo.tsx"
          }
        ]
      },
      {
        "name": "tiptap",
        "type": "registry:component",
        "title": "Tiptap Editor",
        "description": "A rich text editor built with Tiptap, featuring a customizable toolbar, bubble menu, and code blocks with syntax highlighting.",
        "dependencies": [
          "@tiptap/react",
          "@tiptap/starter-kit",
          "@tiptap/extension-underline",
          "@tiptap/extension-text-align",
          "@tiptap/extension-placeholder",
          "@tiptap/extension-code-block-lowlight",
          "lowlight",
          "lucide-react",
          "@tailwindcss/typography"
        ],
        "registryDependencies": [
          "toggle",
          "tooltip",
          "dropdown-menu",
          "button",
          "select",
          "separator",
          "skeleton"
        ],
        "files": [
          {
            "path": "registry/tiptap/components/tiptap.tsx",
            "type": "registry:component",
            "target": "components/tiptap.tsx"
          },
          {
            "path": "registry/tiptap/components/tiptap-code-block.tsx",
            "type": "registry:component",
            "target": "components/tiptap-code-block.tsx"
          },
          {
            "path": "registry/tiptap/components/tiptap-dropdown-menu.tsx",
            "type": "registry:component",
            "target": "components/tiptap-dropdown-menu.tsx"
          },
          {
            "path": "registry/tiptap/app/page.tsx",
            "type": "registry:page",
            "target": "app/page.tsx"
          }
        ],
        "tailwind": {
          "config": {
            "plugins": ["@tailwindcss/typography"]
          }
        },
        "css": {
          "@plugin @tailwindcss/typography": {},
          "@layer components": {
            ".ProseMirror:focus": {
              "outline": "none"
            },
            ".tiptap p.is-editor-empty:first-child::before": {
              "color": "hsl(var(--muted-foreground))",
              "content": "attr(data-placeholder)",
              "float": "left",
              "height": "0",
              "pointer-events": "none"
            },
            ".prose .code-block": {
              "position": "relative"
            },
            ".prose .code-block select": {
              "position": "absolute",
              "top": "0.5rem",
              "right": "0.5rem"
            },
            ".prose .code-block pre": {
              "padding-top": "4rem"
            },
            ".prose pre": {
              "@apply": "bg-muted",
              "font-family": "'JetBrainsMono', monospace",
              "padding": "0.75rem 1rem",
              "border-radius": "0.5rem"
            },
            "pre code": {
              "color": "inherit",
              "padding": "0",
              "background": "none",
              "font-size": "0.8rem"
            },
            "pre .hljs-comment, pre .hljs-quote": {
              "@apply": "dark:text-neutral-500 text-neutral-800",
              "font-style": "italic"
            },
            "pre .hljs-variable, pre .hljs-template-variable, pre .hljs-strong, pre .hljs-emphasis, pre .hljs-quote, pre .hljs-tag, pre .hljs-name, pre .hljs-link, pre .hljs-regexp, pre .hljs-deletion, pre .hljs-selector-id, pre .hljs-selector-class, pre .hljs-selector-attr, pre .re .hljs-selector-pseudo": {
              "@apply": "dark:text-rose-300 text-rose-700"
            },
            "pre .hljs-literal, pre .hljs-number, pre .hljs-bullet, pre .hljs-type, pre .hljs-symbol, pre .hljs-meta, pre .hljs-link": {
              "@apply": "dark:text-emerald-300 text-emerald-700"
            },
            "pre .hljs-built_in, pre .hljs-class .hljs-title": {
              "@apply": "dark:text-orange-200 text-orange-700"
            },
            "pre .hljs-string, pre .hljs-char, pre .hljs-addition, pre .hljs-subst": {
              "@apply": "dark:text-blue-300 text-blue-700"
            },
            "pre .hljs-attr, pre .hljs-attribute": {
              "@apply": "dark:text-blue-300 text-blue-700"
            },
            "pre .hljs-section, pre .hljs-title": {
              "@apply": "dark:text-purple-300 text-purple-700"
            },
            "pre .hljs-keyword, pre .hljs-selector-tag": {
              "@apply": "dark:text-blue-300 text-blue-700"
            },
            "pre .hljs-emphasis": {
              "font-style": "italic"
            },
            "pre .hljs-strong": {
              "font-weight": "bold"
            },
            ".prose code:not(pre > code)": {
              "@apply": "rounded bg-background px-1.5 py-1 font-mono text-sm font-semibold text-muted-foreground"
            },
            ".prose pre": {
              "@apply": "whitespace-pre overflow-x-auto"
            },
            ".prose pre code": {
              "@apply": "text-muted-foreground",
              "white-space": "pre !important"
            },
            ".prose code::before, .prose code::after": {
              "content": "''"
            }
          }
        }
      },
      {
        "name": "registry-explorer",
        "type": "registry:block",
        "title": "Registry Explorer",
        "description": "A file explorer component for browsing and viewing registry component files with syntax highlighting and copy functionality.",
        "dependencies": [
          "lucide-react"
        ],
        "registryDependencies": [
          "button"
        ],
        "files": [
          {
            "path": "registry/registry-explorer/components/registry-explorer.tsx",
            "type": "registry:component",
            "target": "components/registry-explorer.tsx"
          },
          {
            "path": "registry/registry-explorer/lib/api.ts",
            "type": "registry:lib",
            "target": "lib/api.ts"
          },
          {
            "path": "registry/registry-explorer/utils/file-tree.ts",
            "type": "registry:lib",
            "target": "utils/file-tree.ts"
          },
          {
            "path": "registry/registry-explorer/api/registry/route.ts",
            "type": "registry:file",
            "target": "app/api/registry/route.ts"
          },
          {
            "path": "registry/registry-explorer/api/registry/[component]/route.ts",
            "type": "registry:file",
            "target": "app/api/registry/[component]/route.ts"
          },
          {
            "path": "registry/registry-explorer/api/registry/[component]/files/[...path]/route.ts",
            "type": "registry:file",
            "target": "app/api/registry/[component]/files/[...path]/route.ts"
          }
        ]
      },
      {
        "name": "attio-contact",
        "type": "registry:block",
        "title": "Attio Contact Form",
        "description": "A comprehensive contact form component inspired by Attio's design, featuring drag-and-drop sortable email and phone fields, company selection with search, and popover-based field editing.",
        "dependencies": [
          "lucide-react",
          "@dnd-kit/core",
          "@dnd-kit/sortable",
          "@dnd-kit/utilities"
        ],
        "registryDependencies": [
          "input",
          "button",
          "badge",
          "popover",
          "command",
          "dialog",
          "textarea",
          "label"
        ],
        "files": [
          {
            "path": "registry/attio-contact/components/attio-contact.tsx",
            "type": "registry:component",
            "target": "components/attio-contact.tsx"
          },
          {
            "path": "registry/attio-contact/app/page.tsx",
            "type": "registry:page",
            "target": "app/page.tsx"
          },
          {
            "path": "registry/ui/badge.tsx",
            "type": "registry:component",
            "target": "components/ui/badge.tsx"
          }
        ]
      }
    ]
  }